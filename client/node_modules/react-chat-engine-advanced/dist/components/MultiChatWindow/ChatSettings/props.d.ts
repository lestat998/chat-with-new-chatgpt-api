/// <reference types="react" />
import { ChatSettingsStyles } from 'react-chat-engine-advanced/dist/components/MultiChatWindow/ChatSettings/styles';
import { ChatAvatarsProps } from 'react-chat-engine-advanced/dist/components/MultiChatWindow/ChatSettings/ChatAvatars/props';
import { PeopleSettingsProps } from 'react-chat-engine-advanced/dist/components/MultiChatWindow/ChatSettings/PeopleSettings/props';
import { PhotosSettingsProps } from 'react-chat-engine-advanced/dist/components/MultiChatWindow/ChatSettings/PhotosSettings/props';
import { OptionsSettingsProps } from 'react-chat-engine-advanced/dist/components/MultiChatWindow/ChatSettings/OptionsSettings/props';
import { ChatObject, PersonObject } from 'react-chat-engine-advanced/dist/interfaces';
export interface ChatSettingsProps extends ChatSettingsStyles {
    chat?: ChatObject;
    peopleToInvite?: Array<PersonObject>;
    username?: string;
    isLoading?: boolean;
    onDeleteChatClick?: (chat: ChatObject) => Promise<void>;
    onInvitePersonClick?: (person: PersonObject) => Promise<void>;
    onRemovePersonClick?: (person: PersonObject) => Promise<void>;
    renderChatSettings?: (props: ChatSettingsProps) => JSX.Element | Element | React.FC<ChatSettingsProps>;
    renderChatAvatars?: (props: ChatAvatarsProps) => JSX.Element | Element | React.FC<ChatAvatarsProps>;
    renderPeopleSettings?: (props: PeopleSettingsProps) => JSX.Element | Element | React.FC<PeopleSettingsProps>;
    renderPhotosSettings?: (props: PhotosSettingsProps) => JSX.Element | Element | React.FC<PhotosSettingsProps>;
    renderOptionsSettings?: (props: OptionsSettingsProps) => JSX.Element | Element | React.FC<OptionsSettingsProps>;
}
